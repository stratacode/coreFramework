import java.text.DecimalFormat;

@sc.js.JSSettings(jsLibFiles="js/util.js", prefixAlias="sc_")
public class TextUtil {
   // Accepts any Number including BigDecimal for symmetric formatting on server and client
   public static String format(String format, Object number) {
      DecimalFormat df = new DecimalFormat(format);
      return df.format(number);
   }

   // Currently the data binding system can't listen on method calls but can for function arguments so this is a workaround
   public static int length(String str) {
      if (str == null)
         return 0;
      return str.length();
   }

   public static boolean isEmpty(String str) {
      return str == null || str.length() == 0;
   }

   public static boolean equals(CharSequence s1, CharSequence s2) {
      if (s1 == s2)
         return true;
      if (s1 == null || s2 == null)
         return false;
      int s1len = s1.length();
      int s2len = s2.length();
      if (s1len != s2len)
         return false;
      for (int i = 0; i < s1len; i++) {
         if (s1.charAt(i) != s2.charAt(i))
            return false;
      }
      return true;
   }

   public static String escapeHTML(String in) {
      return StringUtil.escapeHTML(in, false).toString();
   }

   public static String escapeQuotes(String in) {
      return in.replace("'","&apos;").replace("\"", "&quot;");
   }
}
