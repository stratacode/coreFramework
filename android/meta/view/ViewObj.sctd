/** 
 * Snippet to be inserted for each object definition which extends the android View class
 * Must be inside of an Activity component.
 */
<% if (rootName == null)  // rootName is the object name of the root object when this is a child - in this case, a ref to the outer-most Activity in which we are defined
      throw new IllegalArgumentException("Objects of type: " + typeName + 
                                         " must be children of an Activity/Service"); %>
<% if (!overrideField && !overrideGet) { %>
   <%=fieldModifiers%> <%=variableTypeName%> <%=lowerClassName%>;
<% } %>
<%=getModifiers%> <%=variableTypeName%> get<%=upperClassName%>(boolean doInit) {
<% if (overrideGet) { %>
   <%=variableTypeName%> <%=lowerClassName%> = super.get<%=upperClassName%>();\
<% } %>
   if (<%=lowerClassName%> == null) {
   <%=lowerClassName%> = <% 
      if (typeIsComponentClass) { 
          %><%=typeClassName%>.new<%=typeBaseName%>(false,<%=rootName%>)<% 
      } else { 
          %>new <%=typeName%>(<%=rootName%>)<% 
      } %>;
<% if (overrideGet) { %>
      set<%=upperClassName%>(<%=lowerClassName%>);
<% } %>
     <%=lowerClassName%>.preInit();
     <%=propertyAssignments%>
      if (doInit) {
         <%=lowerClassName%>.init();
         <%=lowerClassName%>.start();
      }
      return <%=lowerClassName%>;
   }
   else {<%=accessHook%>
      return <%=lowerClassName%>;
   }
   else {
      <%=variableTypeName%> _<%=lowerClassName%> = <%=lowerClassName%>;<%=accessHook%>
      return <%=returnCast%><%=lowerClassName%>;
   }
}
<%=getModifiers%> <%=variableTypeName%> get<%=upperClassName%>() { 
   return get<%=upperClassName%>(true); 
}
