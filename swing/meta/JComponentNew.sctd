/** 
 * Snippet to be inserted for each object definition which extends the awt Component class
 * Accumulates the children objects and adds them.
 */
<% if (!isAbstract) { %>
<%=getModifiers%> <%=variableTypeName%> new<%=upperClassName%>(boolean doInit<%=nextConstructorDecls%>) {
  <%=variableTypeName%> _<%=lowerClassName%>;
  _<%=lowerClassName%> = <% if (typeIsCompiledComponent) { %><%=typeClassName%>.new<%=typeBaseName%>(false<%=nextConstructorParams%>)<% } else { %>new <%=typeName%>(<%=constructorParams%>)<% } %>;
  _<%=lowerClassName%>.preInit();
  <%=getDynamicTypeDefinition("_" + lowerClassName, 1)%><%=propertyAssignments%>
  java.util.List _children = (java.util.List) _<%=lowerClassName%>.getClientProperty("sc.children");
  if (_children == null)
      _children = java.util.Arrays.asList(<%=childrenNames%>);
  for (Object _child:_children) {
     sc.swing.SwingUtil.addChild(_<%=lowerClassName%>, _child);
  }
  if (doInit) {
    _<%=lowerClassName%>.init();
    _<%=lowerClassName%>.start();
  }
  return _<%=lowerClassName%>;
}

<%=getModifiers%> <%=variableTypeName%> new<%=upperClassName%>(<%=constructorDecls%>) { return new<%=upperClassName%>(true<%=nextConstructorParams%>); }
<% } %>
