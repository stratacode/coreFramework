<% if (!overrideField && !overrideGet) { %>
   <%=fieldModifiers%> <%=variableTypeName%> <%=lowerClassName%>;
<% } %>
<%=getModifiers%> <%=variableTypeName%> get<%=upperClassName%>(boolean doInit) {
<% if (overrideGet) { %>
   <%=variableTypeName%> <%=lowerClassName%> = super.get<%=upperClassName%>();
<% } %>
   if (<%=lowerClassName%> == null) {
      <%=variableTypeName%> _<%=lowerClassName%> = <% if (typeIsComponentClass) { %><%=typeClassName%>.new<%=typeBaseName%>(false)<% } else { %>new <%=typeName%>(<%=rootName%>)<% } %>;
      <%=lowerClassName%> = _<%=lowerClassName%>;
<% if (overrideGet) { %>
      set<%=upperClassName%>(<%=lowerClassName%>);
<% } %>
     _<%=lowerClassName%>._preInit();
     <%=propertyAssignments%>
     java.util.List _children = java.util.Arrays.asList(<%=childrenNames%>);
     org.eclipse.jetty.server.handler.ContextHandlerCollection coll = new org.eclipse.jetty.server.handler.ContextHandlerCollection();
     for (Object _child:_children) {
        if (_child instanceof org.eclipse.jetty.server.Connector)
           _<%=lowerClassName%>.addConnector((org.eclipse.jetty.server.Connector) _child);
        else if (_child instanceof org.eclipse.jetty.server.Handler) {
            coll.addHandler((org.eclipse.jetty.server.Handler)_child);
         }
        //else if (_child instanceof org.eclipse.jetty.security.LoginService)
        //   _<%=lowerClassName%>.addUserRealm((org.eclipse.jetty.security.LoginService)_child);
        //else if (_child instanceof org.eclipse.jetty.util.component.LifeCycle)
        //   _<%=lowerClassName%>.addLifeCycle((org.eclipse.jetty.util.component.LifeCycle)_child);
     }
     _<%= lowerClassName %>.setHandler(coll);
     if (doInit) {
       _<%=lowerClassName%>._init();
       try {
          _<%=lowerClassName%>._start();
          _<%=lowerClassName%>.start(); // Call the handler's start method
       }
      catch (Exception exc) {
         throw new IllegalArgumentException(exc);
       }
       }
       return _<%=lowerClassName%>;
   }
   else {
      <%=variableTypeName%> _<%=lowerClassName%> = <%=returnCast%><%=lowerClassName%>;<%=accessHook%>
      return _<%=lowerClassName%>;
   }
}
<%=getModifiers%> <%=variableTypeName%> get<%=upperClassName%>() { return get<%=upperClassName%>(true); }
