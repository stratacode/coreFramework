/** 
 * Snippet to be inserted for each object definition which extends the swing JComponent class
 * Accumulates the children objects and adds them.
 */
<%=fieldModifiers%> <%=variableTypeName%> <%=lowerClassName%>;
<%=getModifiers%> <%=variableTypeName%> new<%=upperClassName%>(boolean doInit<%=nextConstructorDecls%>) {
   <%=variableTypeName%> _<%=lowerClassName%> = <% if (typeIsComponentClass) { %><%=typeClassName%>.new<%=typeBaseName%>(false<%=nextConstructorParams%>)<% } else { %>new <%=typeName%>(<%=constructorParams%>)<% } %>;
   <%=lowerClassName%> = _<%=lowerClassName%>;
   _<%=lowerClassName%>.preInit();
   <%=getDynamicTypeDefinition("_" + lowerClassName, 1)%><%=propertyAssignments%>
   java.util.List _children = java.util.Arrays.asList(<%=childrenNames%>);
   for (Object _child:_children) {
      if (_child instanceof sc.opengl.IRenderNode) {
          <%=lowerClassName%>.addChild((sc.opengl.IRenderNode) _child);
      }
   }
   if (doInit) {
      _<%=lowerClassName%>.init();
      _<%=lowerClassName%>.start();
   }
   return _<%=lowerClassName%>;
}

<%=getModifiers%> <%=variableTypeName%> new<%=upperClassName%>(<%=constructorDecls%>) { return new<%=upperClassName%>(true<%=nextConstructorParams%>); }
