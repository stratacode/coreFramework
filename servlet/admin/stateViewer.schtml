<%@
   import sc.obj.ScopeDefinition;
   import sc.obj.ScopeContext;
   import sc.sync.SyncManager;
   import sc.sync.SyncManager.SyncContext;
   import sc.sync.SyncManager.InstInfo;
   import sc.util.StringUtil;
   import java.util.Map;
   import java.util.Map.Entry;
   import java.util.Arrays;
   import sc.js.URLPath;

   // This template is one of the few stateless pages, both because it's used as a diagnostic and to serve as a test/example of building stateless pages
   // It behaves more like a traditional JSP page.
%>
<html scope="request" exec="server">

<body>
<h2>StrataCode Server State Viewer</h2>
<%
   for (ScopeDefinition currentScope:ScopeDefinition.scopes) {
      if (currentScope != null) {
         String openParam = "open" + currentScope.getExternalName();
         Boolean scopeOpen = (Boolean) URLPath.getQueryParam(pageURL, openParam);
         if (scopeOpen == null)
            scopeOpen = false;
         ScopeContext scopeCtx = currentScope.getScopeContext(false);
         Map<String,Object> values = scopeCtx == null ? null : scopeCtx.getValues();
         %>
            <div class="scopeHeader"><span class="scopeName"><%= currentScope.externalName %></span> scope(<%= values == null ? "not created" : values.size() %>)<a href='= URLPath.setQueryParam(pageURL, openParam, !scopeOpen)'><img src='= scopeOpen ? "images/listClose.png" : "images/listOpen.png"'/></a></div>
            <p>
               <%
                  if (scopeCtx != null && scopeOpen) {
                     if (values == null) {
                        out.append("no values");
                     }
                     else {
                        SyncContext syncCtx = null;
                        // First dump out the normal scope values
                        for (Map.Entry<String,Object> ent:values.entrySet()) {
                           if (ent.key.equals(SyncManager.SC_SYNC_CONTEXT_SCOPE_KEY)) {
                              syncCtx = (SyncContext) ent.value;
                              continue;
                           }
                           %>
                              <div>
                                 <span class="key"><%= ent.key %></span>
                                 <span class="value"> <%= ent.value %></span>
                              </div>
                           <%
                        }

                        // Now dump out the contents of the sync context if we found one
                        if (syncCtx != null && syncCtx.objectIndex.size() > 0) {
                           %>Synchronized objects<br/>
                            <table><tr><th>Name(constr args)</th><th>registered</th><th>onDemand</th><th>initialized</th></tr>
                           <%
                           for (Map.Entry<String,Object> ent:syncCtx.objectIndex.entrySet()) {
                              InstInfo instInfo = syncCtx.getInstInfo(ent.value);
                              if (instInfo != null) {
                                 %>
                                 <tr>
                                    <td><%= instInfo.name %>(<%= sc.util.ArrayUtil.argsToString(instInfo.args) %>)</td>
                                    <td><%= instInfo.registered %></td>
                                    <td><%= instInfo.onDemand %></td>
                                    <td><%= instInfo.initialized %></td>
                                 </tr>
                                 <%
                              }
                           } %>
                           </table>
                        <% }
                     }
                  }
               %>
            </p>
         <%
      }
   }
%>
</body>

</html>
